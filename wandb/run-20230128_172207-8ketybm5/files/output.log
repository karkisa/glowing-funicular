/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and will be removed in 0.15, please use 'weights' instead.
  warnings.warn(
/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing `weights=EfficientNet_B0_Weights.IMAGENET1K_V1`. You can also use `weights=EfficientNet_B0_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
GPU available: True (mps), used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py:1789: UserWarning: MPS available but not used. Set `accelerator` and `devices` using `Trainer(accelerator='mps', devices=1)`.
  rank_zero_warn(
Missing logger folder: /Users/sagar/Desktop/Ace/Brovo5/lightning_logs
  | Name  | Type             | Params
-------------------------------------------
0 | model | get_model        | 4.0 M
1 | loss  | CrossEntropyLoss | 0
-------------------------------------------
4.0 M     Trainable params
0         Non-trainable params
4.0 M     Total params
16.061    Total estimated model params size (MB)
Sanity Checking DataLoader 0:   0%|                                                                        | 0/2 [00:00<?, ?it/s]> /Users/sagar/Desktop/Ace/Brovo5/logic.py(69)validation_step()
-> outputs = self.model(imgs)
(tensor([[[0.0889, 0.0756, 0.0756,  ..., 0.8311, 0.7511, 0.6311],
         [0.2844, 0.3422, 0.4756,  ..., 0.7822, 0.6889, 0.5556],
         [0.3867, 0.4089, 0.6178,  ..., 0.7111, 0.6533, 0.5956],
         ...,
         [0.4311, 0.4844, 0.5600,  ..., 0.8756, 0.8267, 0.8222],
         [0.4267, 0.4533, 0.5956,  ..., 0.8489, 0.7911, 0.8000],
         [0.5733, 0.5333, 0.6844,  ..., 0.8356, 0.7778, 0.7511]],
        [[0.0089, 0.0000, 0.0000,  ..., 0.7467, 0.6667, 0.5467],
         [0.2089, 0.2622, 0.3956,  ..., 0.6978, 0.6044, 0.4711],
         [0.3067, 0.3289, 0.5378,  ..., 0.6222, 0.5689, 0.5111],
         ...,
         [0.2622, 0.3022, 0.3644,  ..., 0.6800, 0.6311, 0.6444],
         [0.2533, 0.2756, 0.4000,  ..., 0.6489, 0.6000, 0.6222],
         [0.4044, 0.3600, 0.4889,  ..., 0.6356, 0.5822, 0.5733]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.5200, 0.4267, 0.2978],
         [0.1778, 0.2356, 0.3689,  ..., 0.4756, 0.3644, 0.2267],
         [0.2756, 0.3022, 0.5067,  ..., 0.4044, 0.3467, 0.2844],
         ...,
         [0.0844, 0.1511, 0.2444,  ..., 0.6000, 0.5511, 0.5689],
         [0.0800, 0.1156, 0.2800,  ..., 0.5733, 0.5244, 0.5467],
         [0.2267, 0.1911, 0.3644,  ..., 0.5600, 0.5067, 0.4978]]]), tensor([[[0.5111, 0.5956, 0.5111,  ..., 0.7156, 0.9200, 0.8978],
         [0.7244, 0.6533, 0.5911,  ..., 0.6711, 0.9022, 0.9200],
         [0.8756, 0.8178, 0.8178,  ..., 0.8622, 0.8533, 0.8756],
         ...,
         [0.9511, 0.9556, 0.9600,  ..., 0.4800, 0.4667, 0.4356],
         [1.0000, 1.0044, 1.0089,  ..., 0.4267, 0.3956, 0.5244],
         [1.0756, 1.0844, 1.0933,  ..., 0.3200, 0.2622, 0.4800]],
        [[0.6222, 0.7067, 0.6222,  ..., 0.8044, 1.0089, 0.9556],
         [0.8400, 0.7644, 0.7022,  ..., 0.7600, 0.9911, 0.9778],
         [1.0000, 0.9422, 0.9422,  ..., 0.9644, 0.9511, 0.9289],
         ...,
         [0.9467, 0.9556, 0.9689,  ..., 0.5600, 0.5422, 0.5156],
         [0.9956, 1.0000, 1.0178,  ..., 0.5067, 0.4756, 0.6089],
         [1.0933, 1.1022, 1.1111,  ..., 0.4000, 0.3422, 0.5689]],
        [[0.3689, 0.4578, 0.3689,  ..., 0.5022, 0.7067, 0.7956],
         [0.5867, 0.5156, 0.4533,  ..., 0.4578, 0.6889, 0.8178],
         [0.6756, 0.6178, 0.6178,  ..., 0.5867, 0.5733, 0.7689],
         ...,
         [0.9689, 0.9733, 0.9689,  ..., 0.4400, 0.4267, 0.3867],
         [1.0178, 1.0222, 1.0133,  ..., 0.3911, 0.3600, 0.4800],
         [1.1111, 1.1156, 1.1156,  ..., 0.2711, 0.2178, 0.4044]]]), tensor([[[0.9289, 0.9511, 0.9600,  ..., 0.8889, 0.9200, 0.8444],
         [0.9333, 0.9511, 0.9600,  ..., 0.9289, 0.9111, 0.8356],
         [0.8844, 0.9067, 0.9244,  ..., 0.9467, 0.9467, 0.8444],
         ...,
         [0.3111, 0.1378, 0.0267,  ..., 0.3111, 0.2311, 0.1733],
         [0.5511, 0.2178, 0.0356,  ..., 0.2400, 0.1556, 0.1244],
         [0.6489, 0.2400, 0.0489,  ..., 0.1822, 0.1378, 0.1289]],
        [[0.9778, 0.9956, 1.0000,  ..., 0.9689, 1.0000, 0.9378],
         [0.9600, 0.9733, 0.9778,  ..., 1.0044, 0.9911, 0.9200],
         [0.9111, 0.9289, 0.9422,  ..., 1.0222, 1.0267, 0.9289],
         ...,
         [0.3333, 0.1511, 0.0311,  ..., 0.2756, 0.2000, 0.1422],
         [0.5733, 0.2356, 0.0444,  ..., 0.2311, 0.1511, 0.1156],
         [0.6711, 0.2533, 0.0578,  ..., 0.1733, 0.1333, 0.1200]],
        [[0.7200, 0.7378, 0.7422,  ..., 0.5956, 0.6222, 0.5244],
         [0.7289, 0.7378, 0.7378,  ..., 0.6356, 0.6133, 0.5200],
         [0.6800, 0.6933, 0.7022,  ..., 0.6533, 0.6489, 0.5289],
         ...,
         [0.2356, 0.0800, 0.0000,  ..., 0.1333, 0.0622, 0.0222],
         [0.4667, 0.1422, 0.0000,  ..., 0.1111, 0.0311, 0.0178],
         [0.5644, 0.1511, 0.0000,  ..., 0.0533, 0.0133, 0.0222]]]), tensor([[[0.3156, 0.2578, 0.1911,  ..., 0.1067, 0.1022, 0.1022],
         [0.3511, 0.2889, 0.2044,  ..., 0.1200, 0.1156, 0.1156],
         [0.4267, 0.3556, 0.2489,  ..., 0.1333, 0.1289, 0.1244],
         ...,
         [0.5067, 0.4444, 0.3556,  ..., 0.5733, 0.6089, 0.5689],
         [0.4978, 0.4400, 0.3644,  ..., 0.6000, 0.6933, 0.6800],
         [0.4978, 0.4400, 0.3822,  ..., 0.6089, 0.7422, 0.7556]],
        [[0.2800, 0.2222, 0.1511,  ..., 0.0444, 0.0444, 0.0444],
         [0.3200, 0.2533, 0.1644,  ..., 0.0444, 0.0444, 0.0444],
         [0.4000, 0.3200, 0.2089,  ..., 0.0444, 0.0444, 0.0444],
         ...,
         [0.4444, 0.3822, 0.2978,  ..., 0.5111, 0.5022, 0.4356],
         [0.4444, 0.3911, 0.3200,  ..., 0.5244, 0.5689, 0.5289],
         [0.4444, 0.3956, 0.3422,  ..., 0.5244, 0.6044, 0.5911]],
        [[0.1867, 0.1333, 0.0756,  ..., 0.0444, 0.0444, 0.0444],
         [0.2222, 0.1600, 0.0889,  ..., 0.0444, 0.0444, 0.0444],
         [0.2933, 0.2267, 0.1289,  ..., 0.0489, 0.0489, 0.0489],
         ...,
         [0.1200, 0.0844, 0.0400,  ..., 0.2444, 0.2533, 0.2000],
         [0.1022, 0.0667, 0.0356,  ..., 0.2667, 0.3289, 0.3022],
         [0.0889, 0.0622, 0.0400,  ..., 0.2756, 0.3689, 0.3689]]]), tensor([[[0.3733, 0.3778, 0.3956,  ..., 0.1511, 0.1467, 0.1422],
         [0.4844, 0.4800, 0.4889,  ..., 0.1556, 0.1511, 0.1467],
         [0.5956, 0.5911, 0.5911,  ..., 0.1556, 0.1556, 0.1556],
         ...,
         [0.2667, 0.2267, 0.2444,  ..., 0.2889, 0.2622, 0.2222],
         [0.1822, 0.1822, 0.2356,  ..., 0.4089, 0.4089, 0.3600],
         [0.1244, 0.1467, 0.2133,  ..., 0.4933, 0.5244, 0.4756]],
        [[0.5289, 0.5333, 0.5556,  ..., 0.2311, 0.2222, 0.2178],
         [0.6444, 0.6444, 0.6489,  ..., 0.2311, 0.2222, 0.2178],
         [0.7644, 0.7600, 0.7556,  ..., 0.2267, 0.2222, 0.2178],
         ...,
         [0.2622, 0.2267, 0.2444,  ..., 0.2711, 0.2400, 0.1956],
         [0.1778, 0.1822, 0.2356,  ..., 0.3911, 0.3911, 0.3422],
         [0.1200, 0.1467, 0.2178,  ..., 0.4844, 0.5156, 0.4667]],
        [[0.1289, 0.1289, 0.1467,  ..., 0.0800, 0.0756, 0.0756],
         [0.2133, 0.2133, 0.2222,  ..., 0.0800, 0.0800, 0.0800],
         [0.3022, 0.2978, 0.2978,  ..., 0.0844, 0.0844, 0.0844],
         ...,
         [0.1289, 0.0978, 0.1111,  ..., 0.1867, 0.1644, 0.1200],
         [0.0622, 0.0622, 0.1111,  ..., 0.3067, 0.3156, 0.2667],
         [0.0222, 0.0400, 0.0933,  ..., 0.3956, 0.4311, 0.3822]]]), tensor([[[0.9244, 0.7556, 0.3067,  ..., 0.6889, 0.5600, 0.7067],
         [0.7778, 0.7022, 0.3689,  ..., 0.7022, 0.5467, 0.5644],
         [0.4444, 0.4533, 0.2667,  ..., 0.8311, 0.6311, 0.5067],
         ...,
         [0.1200, 0.1022, 0.1022,  ..., 0.9067, 0.9556, 0.8400],
         [0.1111, 0.1022, 0.1067,  ..., 0.8800, 0.9467, 0.8089],
         [0.1067, 0.1067, 0.1244,  ..., 0.8444, 0.8978, 0.7467]],
        [[0.9156, 0.7422, 0.2889,  ..., 0.7022, 0.5733, 0.7200],
         [0.7778, 0.6933, 0.3600,  ..., 0.6978, 0.5378, 0.5556],
         [0.4444, 0.4444, 0.2578,  ..., 0.8267, 0.6222, 0.4978],
         ...,
         [0.1511, 0.1156, 0.1111,  ..., 0.9422, 0.9867, 0.8711],
         [0.1556, 0.1289, 0.1289,  ..., 0.9200, 0.9867, 0.8489],
         [0.1511, 0.1333, 0.1467,  ..., 0.8844, 0.9378, 0.7867]],
        [[0.8222, 0.6756, 0.2311,  ..., 0.5467, 0.4178, 0.5644],
         [0.6800, 0.6133, 0.2889,  ..., 0.5378, 0.3867, 0.4089],
         [0.3467, 0.3644, 0.1867,  ..., 0.6667, 0.4756, 0.3511],
         ...,
         [0.1022, 0.0711, 0.0711,  ..., 0.6578, 0.7200, 0.6089],
         [0.0978, 0.0800, 0.0844,  ..., 0.6044, 0.6800, 0.5422],
         [0.0933, 0.0844, 0.1022,  ..., 0.5689, 0.6267, 0.4800]]]), tensor([[[0.0489, 0.0533, 0.0667,  ..., 0.1422, 0.1244, 0.1156],
         [0.0533, 0.0578, 0.0667,  ..., 0.1422, 0.1244, 0.1200],
         [0.0489, 0.0578, 0.0622,  ..., 0.1467, 0.1333, 0.1289],
         ...,
         [0.2978, 0.2933, 0.2844,  ..., 0.2578, 0.2311, 0.2133],
         [0.2800, 0.2756, 0.2711,  ..., 0.2133, 0.1822, 0.1644],
         [0.2711, 0.2711, 0.2667,  ..., 0.1867, 0.1556, 0.1378]],
        [[0.0933, 0.0978, 0.1067,  ..., 0.2222, 0.2000, 0.1911],
         [0.0889, 0.0978, 0.1067,  ..., 0.2222, 0.2044, 0.1956],
         [0.0933, 0.0978, 0.1067,  ..., 0.2267, 0.2133, 0.2044],
         ...,
         [0.4222, 0.4178, 0.4044,  ..., 0.3111, 0.2800, 0.2622],
         [0.4044, 0.4044, 0.3956,  ..., 0.2578, 0.2267, 0.2089],
         [0.4000, 0.3956, 0.3911,  ..., 0.2267, 0.1956, 0.1778]],
        [[0.0000, 0.0044, 0.0044,  ..., 0.0356, 0.0222, 0.0178],
         [0.0000, 0.0000, 0.0044,  ..., 0.0311, 0.0222, 0.0133],
         [0.0000, 0.0000, 0.0000,  ..., 0.0267, 0.0178, 0.0178],
         ...,
         [0.1067, 0.1022, 0.0978,  ..., 0.0000, 0.0000, 0.0000],
         [0.0889, 0.0889, 0.0844,  ..., 0.0000, 0.0000, 0.0000],
         [0.0800, 0.0800, 0.0756,  ..., 0.0000, 0.0000, 0.0000]]]), tensor([[[0.4667, 0.5644, 0.6133,  ..., 0.7511, 0.6356, 0.5511],
         [0.5467, 0.6800, 0.7022,  ..., 0.6400, 0.5200, 0.4533],
         [0.5867, 0.7333, 0.8000,  ..., 0.5289, 0.4533, 0.4489],
         ...,
         [0.7600, 0.8222, 1.0444,  ..., 0.2622, 0.2756, 0.2800],
         [0.7689, 0.9689, 1.0400,  ..., 0.2489, 0.2533, 0.2578],
         [0.6844, 0.8711, 0.9289,  ..., 0.2533, 0.2933, 0.2933]],
        [[0.4711, 0.5689, 0.6044,  ..., 0.8222, 0.7022, 0.6178],
         [0.5422, 0.6756, 0.6844,  ..., 0.7111, 0.5911, 0.5244],
         [0.5822, 0.7289, 0.7822,  ..., 0.6044, 0.5244, 0.5200],
         ...,
         [0.7867, 0.8489, 1.0578,  ..., 0.3600, 0.3689, 0.3778],
         [0.7956, 0.9956, 1.0489,  ..., 0.3467, 0.3511, 0.3556],
         [0.7111, 0.8978, 0.9422,  ..., 0.3511, 0.3911, 0.3911]],
        [[0.4400, 0.5378, 0.5867,  ..., 0.6578, 0.5378, 0.4533],
         [0.5022, 0.6356, 0.6622,  ..., 0.5156, 0.3956, 0.3289],
         [0.5422, 0.6889, 0.7600,  ..., 0.4044, 0.3289, 0.3244],
         ...,
         [0.7511, 0.8133, 1.0400,  ..., 0.2667, 0.2756, 0.2844],
         [0.7556, 0.9556, 1.0356,  ..., 0.2533, 0.2578, 0.2622],
         [0.6711, 0.8578, 0.9289,  ..., 0.2578, 0.2978, 0.2978]]]), tensor([[[0.0844, 0.0800, 0.0844,  ..., 0.0933, 0.0844, 0.0800],
         [0.0800, 0.0800, 0.0844,  ..., 0.1867, 0.1556, 0.1156],
         [0.0800, 0.0800, 0.0844,  ..., 0.3422, 0.2978, 0.2533],
         ...,
         [0.3600, 0.3156, 0.3022,  ..., 0.4178, 0.3956, 0.3911],
         [0.3067, 0.3111, 0.3378,  ..., 0.4356, 0.4444, 0.4444],
         [0.2978, 0.2889, 0.2889,  ..., 0.4000, 0.4089, 0.4044]],
        [[0.1200, 0.1156, 0.1200,  ..., 0.1556, 0.1467, 0.1378],
         [0.1156, 0.1156, 0.1200,  ..., 0.2578, 0.2267, 0.1867],
         [0.1156, 0.1156, 0.1200,  ..., 0.4089, 0.3689, 0.3244],
         ...,
         [0.3644, 0.3200, 0.3067,  ..., 0.4089, 0.3867, 0.3778],
         [0.3067, 0.3111, 0.3378,  ..., 0.4222, 0.4311, 0.4356],
         [0.2978, 0.2889, 0.2889,  ..., 0.3822, 0.3956, 0.3956]],
        [[0.0089, 0.0044, 0.0089,  ..., 0.0000, 0.0000, 0.0000],
         [0.0044, 0.0044, 0.0089,  ..., 0.0000, 0.0000, 0.0000],
         [0.0044, 0.0044, 0.0089,  ..., 0.0178, 0.0000, 0.0044],
         ...,
         [0.1556, 0.0844, 0.0356,  ..., 0.2711, 0.2622, 0.2667],
         [0.1111, 0.0978, 0.0978,  ..., 0.2578, 0.2756, 0.2978],
         [0.1022, 0.0756, 0.0489,  ..., 0.2178, 0.2400, 0.2578]]]), tensor([[[0.1822, 0.1956, 0.2133,  ..., 0.1111, 0.1067, 0.1067],
         [0.1778, 0.1911, 0.2133,  ..., 0.1156, 0.1156, 0.1156],
         [0.1733, 0.1911, 0.2089,  ..., 0.1289, 0.1289, 0.1289],
         ...,
         [0.1956, 0.3378, 0.2489,  ..., 0.5111, 0.7689, 0.9467],
         [0.1911, 0.3422, 0.3289,  ..., 0.6800, 0.8711, 0.9778],
         [0.2533, 0.3511, 0.3644,  ..., 0.6178, 0.7067, 0.8000]],
        [[0.1289, 0.1378, 0.1333,  ..., 0.1467, 0.1422, 0.1422],
         [0.1289, 0.1333, 0.1333,  ..., 0.1511, 0.1511, 0.1511],
         [0.1200, 0.1289, 0.1244,  ..., 0.1422, 0.1422, 0.1422],
         ...,
         [0.2667, 0.4089, 0.3422,  ..., 0.5822, 0.8489, 1.0356],
         [0.2667, 0.4133, 0.4222,  ..., 0.7511, 0.9511, 1.0667],
         [0.3111, 0.4089, 0.4444,  ..., 0.7022, 0.7956, 0.8978]],
        [[0.0444, 0.0444, 0.0000,  ..., 0.0933, 0.0889, 0.0889],
         [0.0400, 0.0400, 0.0000,  ..., 0.0978, 0.0978, 0.0978],
         [0.0533, 0.0578, 0.0133,  ..., 0.0978, 0.0978, 0.0978],
         ...,
         [0.0089, 0.1511, 0.0578,  ..., 0.3156, 0.5600, 0.7333],
         [0.0222, 0.1600, 0.1378,  ..., 0.4844, 0.6667, 0.7644],
         [0.0844, 0.1778, 0.2044,  ..., 0.4222, 0.5067, 0.6000]]]), tensor([[[0.7644, 0.7511, 0.5778,  ..., 0.8356, 0.8356, 0.5467],
         [0.6933, 0.5422, 0.4622,  ..., 0.8578, 0.8178, 0.5289],
         [0.5911, 0.4933, 0.4800,  ..., 0.8800, 0.8222, 0.5778],
         ...,
         [0.4356, 0.4889, 0.4978,  ..., 0.3911, 0.4667, 0.5733],
         [0.4622, 0.4667, 0.4800,  ..., 0.5289, 0.5600, 0.6267],
         [0.4933, 0.4978, 0.5333,  ..., 0.5956, 0.6089, 0.6800]],
        [[0.6844, 0.6622, 0.4889,  ..., 0.9111, 0.9111, 0.6178],
         [0.6133, 0.4667, 0.3867,  ..., 0.9200, 0.8800, 0.5867],
         [0.5111, 0.4178, 0.4044,  ..., 0.9422, 0.8844, 0.6356],
         ...,
         [0.4800, 0.5200, 0.5244,  ..., 0.3556, 0.4311, 0.5378],
         [0.4978, 0.5022, 0.5156,  ..., 0.4844, 0.5156, 0.5867],
         [0.5289, 0.5333, 0.5689,  ..., 0.5511, 0.5644, 0.6400]],
        [[0.5511, 0.5244, 0.3467,  ..., 0.6889, 0.6933, 0.4222],
         [0.4800, 0.3156, 0.2311,  ..., 0.7022, 0.6667, 0.4044],
         [0.3778, 0.2667, 0.2489,  ..., 0.7244, 0.6711, 0.4533],
         ...,
         [0.3333, 0.3911, 0.4044,  ..., 0.2044, 0.2800, 0.3778],
         [0.3956, 0.4089, 0.4222,  ..., 0.3778, 0.4089, 0.4667],
         [0.4267, 0.4400, 0.4756,  ..., 0.4444, 0.4578, 0.5200]]]), tensor([[[0.9422, 0.9600, 0.9867,  ..., 0.0178, 0.0178, 0.0178],
         [0.9733, 0.9778, 1.0000,  ..., 0.3333, 0.3333, 0.3378],
         [0.9956, 0.9956, 1.0133,  ..., 0.3200, 0.3244, 0.3333],
         ...,
         [1.0489, 1.0444, 1.0400,  ..., 1.0222, 1.0622, 1.0711],
         [1.0489, 1.0489, 1.0533,  ..., 1.0578, 1.0622, 1.0711],
         [1.0444, 1.0444, 1.0489,  ..., 1.0622, 1.0622, 1.0578]],
        [[0.9067, 0.9200, 0.9467,  ..., 0.0000, 0.0000, 0.0000],
         [0.9378, 0.9422, 0.9556,  ..., 0.2444, 0.2489, 0.2533],
         [0.9600, 0.9600, 0.9689,  ..., 0.2311, 0.2400, 0.2489],
         ...,
         [0.9422, 0.9378, 0.9333,  ..., 0.8756, 0.9378, 0.9467],
         [0.9467, 0.9467, 0.9511,  ..., 0.9111, 0.9422, 0.9467],
         [0.9422, 0.9422, 0.9467,  ..., 0.9244, 0.9511, 0.9467]],
        [[0.5733, 0.5911, 0.6533,  ..., 0.0000, 0.0000, 0.0000],
         [0.6089, 0.6178, 0.6711,  ..., 0.0800, 0.0844, 0.0978],
         [0.6356, 0.6356, 0.6889,  ..., 0.0667, 0.0756, 0.0933],
         ...,
         [0.7778, 0.7733, 0.7689,  ..., 0.6489, 0.7556, 0.7644],
         [0.7733, 0.7733, 0.7778,  ..., 0.6889, 0.7600, 0.7689],
         [0.7689, 0.7689, 0.7733,  ..., 0.7111, 0.7733, 0.7689]]]), tensor([[[0.8311, 0.8000, 0.7422,  ..., 0.1600, 0.1600, 0.1644],
         [0.8311, 0.8000, 0.7378,  ..., 0.1644, 0.1644, 0.1644],
         [0.8267, 0.7956, 0.7333,  ..., 0.1689, 0.1689, 0.1689],
         ...,
         [0.3422, 0.3422, 0.3378,  ..., 0.2089, 0.2089, 0.2089],
         [0.3467, 0.3422, 0.3422,  ..., 0.2133, 0.2089, 0.2089],
         [0.3467, 0.3467, 0.3467,  ..., 0.2133, 0.2133, 0.2089]],
        [[0.7156, 0.6844, 0.6222,  ..., 0.0667, 0.0667, 0.0667],
         [0.7156, 0.6844, 0.6222,  ..., 0.0667, 0.0667, 0.0667],
         [0.7111, 0.6800, 0.6178,  ..., 0.0667, 0.0667, 0.0667],
         ...,
         [0.3822, 0.3822, 0.3778,  ..., 0.1911, 0.1867, 0.1867],
         [0.3867, 0.3867, 0.3822,  ..., 0.1911, 0.1911, 0.1911],
         [0.3867, 0.3867, 0.3867,  ..., 0.1911, 0.1911, 0.1867]],
        [[0.7067, 0.6756, 0.6178,  ..., 0.0889, 0.0889, 0.0889],
         [0.7022, 0.6756, 0.6133,  ..., 0.0889, 0.0889, 0.0889],
         [0.7022, 0.6711, 0.6089,  ..., 0.0889, 0.0889, 0.0889],
         ...,
         [0.2044, 0.2044, 0.2000,  ..., 0.1067, 0.1067, 0.1022],
         [0.2044, 0.2044, 0.2044,  ..., 0.1067, 0.1067, 0.1022],
         [0.2044, 0.2044, 0.2044,  ..., 0.1067, 0.1067, 0.1067]]]), tensor([[[0.6533, 0.5733, 0.5556,  ..., 0.3778, 0.3378, 0.3200],
         [0.5867, 0.6178, 0.5511,  ..., 0.5378, 0.5156, 0.4756],
         [0.3733, 0.6489, 0.5511,  ..., 0.5600, 0.5778, 0.5689],
         ...,
         [0.2978, 0.2667, 0.3067,  ..., 0.1778, 0.1911, 0.1778],
         [0.3156, 0.1733, 0.2311,  ..., 0.1689, 0.1778, 0.1822],
         [0.4711, 0.2711, 0.1244,  ..., 0.1644, 0.1733, 0.1778]],
        [[0.7200, 0.6667, 0.6489,  ..., 0.3644, 0.3200, 0.2933],
         [0.6489, 0.7111, 0.6489,  ..., 0.5244, 0.5022, 0.4489],
         [0.4356, 0.7333, 0.6400,  ..., 0.5556, 0.5733, 0.5511],
         ...,
         [0.3333, 0.2889, 0.3111,  ..., 0.1422, 0.1556, 0.1422],
         [0.3467, 0.1956, 0.2356,  ..., 0.1333, 0.1422, 0.1467],
         [0.5289, 0.3067, 0.1556,  ..., 0.1200, 0.1333, 0.1422]],
        [[0.4844, 0.3911, 0.3733,  ..., 0.1200, 0.0800, 0.0800],
         [0.4356, 0.4356, 0.3689,  ..., 0.2800, 0.2622, 0.2356],
         [0.2222, 0.4844, 0.3867,  ..., 0.2578, 0.2800, 0.2844],
         ...,
         [0.1333, 0.0889, 0.0978,  ..., 0.0933, 0.1067, 0.0933],
         [0.1556, 0.0000, 0.0267,  ..., 0.0844, 0.0933, 0.0978],
         [0.3244, 0.1244, 0.0044,  ..., 0.0756, 0.0844, 0.0933]]]), tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0089, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0044,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0089, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0044,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0044, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), tensor([[[0.0311, 0.0400, 0.0444,  ..., 0.0578, 0.0622, 0.0756],
         [0.0400, 0.0489, 0.0533,  ..., 0.0444, 0.0444, 0.0711],
         [0.0444, 0.0578, 0.0711,  ..., 0.1467, 0.1556, 0.1822],
         ...,
         [0.4844, 0.4933, 0.5111,  ..., 0.4978, 0.5111, 0.5156],
         [0.5200, 0.5156, 0.5333,  ..., 0.4711, 0.5067, 0.5378],
         [0.5556, 0.5511, 0.5511,  ..., 0.4889, 0.5111, 0.5333]],
        [[0.0311, 0.0400, 0.0444,  ..., 0.0133, 0.0178, 0.0311],
         [0.0400, 0.0489, 0.0533,  ..., 0.0133, 0.0044, 0.0267],
         [0.0444, 0.0578, 0.0756,  ..., 0.0978, 0.1067, 0.1333],
         ...,
         [0.4089, 0.4311, 0.4489,  ..., 0.4133, 0.4356, 0.4400],
         [0.4444, 0.4533, 0.4711,  ..., 0.3867, 0.4311, 0.4622],
         [0.4800, 0.4844, 0.4844,  ..., 0.4044, 0.4356, 0.4578]],
        [[0.0311, 0.0400, 0.0444,  ..., 0.0000, 0.0000, 0.0000],
         [0.0267, 0.0356, 0.0400,  ..., 0.0000, 0.0000, 0.0000],
         [0.0311, 0.0444, 0.0622,  ..., 0.0311, 0.0400, 0.0667],
         ...,
         [0.3022, 0.3200, 0.3333,  ..., 0.3111, 0.3289, 0.3333],
         [0.3378, 0.3422, 0.3511,  ..., 0.2844, 0.3244, 0.3556],
         [0.3822, 0.3867, 0.3778,  ..., 0.3022, 0.3289, 0.3511]]]), tensor([[[0.7644, 0.8622, 0.7289,  ..., 0.0889, 0.0978, 0.0978],
         [0.7867, 0.7467, 0.4622,  ..., 0.0978, 0.0978, 0.0978],
         [0.8044, 0.5200, 0.2089,  ..., 0.1156, 0.1156, 0.1156],
         ...,
         [1.0356, 1.0222, 0.8933,  ..., 0.8000, 0.8622, 0.8622],
         [1.0267, 1.0089, 0.8489,  ..., 0.7689, 0.8400, 0.8667],
         [1.0222, 1.0178, 0.8311,  ..., 0.7644, 0.8356, 0.8800]],
        [[0.9244, 1.0133, 0.8222,  ..., 0.1378, 0.1467, 0.1467],
         [0.9467, 0.8978, 0.5511,  ..., 0.1467, 0.1467, 0.1467],
         [0.9244, 0.6311, 0.2622,  ..., 0.1467, 0.1467, 0.1467],
         ...,
         [1.0667, 1.0533, 0.9244,  ..., 0.9422, 0.9822, 0.9778],
         [1.0578, 1.0400, 0.8800,  ..., 0.9244, 0.9689, 0.9911],
         [1.0533, 1.0489, 0.8622,  ..., 0.9200, 0.9644, 1.0089]],
        [[0.5822, 0.6889, 0.5644,  ..., 0.0800, 0.0889, 0.0889],
         [0.6044, 0.5733, 0.2978,  ..., 0.0889, 0.0889, 0.0889],
         [0.6489, 0.3733, 0.0667,  ..., 0.0756, 0.0756, 0.0756],
         ...,
         [0.9911, 0.9822, 0.8533,  ..., 0.4933, 0.5644, 0.5644],
         [0.9822, 0.9689, 0.8089,  ..., 0.4489, 0.5244, 0.5511],
         [0.9778, 0.9778, 0.7911,  ..., 0.4444, 0.5200, 0.5644]]]), tensor([[[0.7556, 0.7556, 0.7556,  ..., 0.3644, 0.4267, 0.4667],
         [0.6622, 0.6622, 0.6622,  ..., 0.5422, 0.5556, 0.4533],
         [0.4667, 0.4667, 0.4667,  ..., 0.6800, 0.5644, 0.4578],
         ...,
         [0.4889, 0.4933, 0.5022,  ..., 0.5956, 0.6711, 0.6311],
         [0.4622, 0.4622, 0.4622,  ..., 0.6622, 0.6000, 0.4400],
         [0.4711, 0.5200, 0.4667,  ..., 0.6356, 0.5556, 0.4267]],
        [[0.6978, 0.7022, 0.7156,  ..., 0.3200, 0.4044, 0.4489],
         [0.6044, 0.6089, 0.6222,  ..., 0.4978, 0.5244, 0.4222],
         [0.3911, 0.3911, 0.3911,  ..., 0.6311, 0.5333, 0.4311],
         ...,
         [0.5067, 0.5156, 0.5289,  ..., 0.6044, 0.6756, 0.6267],
         [0.4800, 0.4889, 0.4889,  ..., 0.6933, 0.6178, 0.4578],
         [0.4889, 0.5422, 0.4933,  ..., 0.6667, 0.5733, 0.4444]],
        [[0.2844, 0.2578, 0.1956,  ..., 0.0044, 0.0489, 0.1022],
         [0.1911, 0.1644, 0.1022,  ..., 0.1644, 0.2133, 0.1289],
         [0.0489, 0.0356, 0.0356,  ..., 0.2978, 0.2222, 0.1378],
         ...,
         [0.2000, 0.2089, 0.2178,  ..., 0.3511, 0.4267, 0.3867],
         [0.1733, 0.1778, 0.1778,  ..., 0.4222, 0.3600, 0.2044],
         [0.1822, 0.2311, 0.1822,  ..., 0.3956, 0.3156, 0.1911]]]), tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]],
        [[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]],
        [[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]]]), tensor([[[0.5156, 0.1778, 0.0933,  ..., 0.5689, 0.7333, 0.9022],
         [0.5511, 0.2089, 0.0844,  ..., 0.8889, 0.9644, 1.0311],
         [0.5822, 0.2489, 0.0889,  ..., 0.9467, 0.9467, 0.9556],
         ...,
         [0.2267, 0.4489, 0.7556,  ..., 0.2089, 0.2622, 0.3822],
         [0.3156, 0.5111, 0.6889,  ..., 0.1822, 0.2178, 0.2844],
         [0.4089, 0.4978, 0.5778,  ..., 0.1156, 0.1733, 0.2089]],
        [[0.3422, 0.0044, 0.0000,  ..., 0.5200, 0.6844, 0.8622],
         [0.3778, 0.0356, 0.0000,  ..., 0.8578, 0.9333, 0.9956],
         [0.4133, 0.0667, 0.0000,  ..., 0.9156, 0.9067, 0.9067],
         ...,
         [0.0400, 0.2533, 0.5422,  ..., 0.0000, 0.0044, 0.1467],
         [0.1333, 0.3244, 0.4889,  ..., 0.0000, 0.0000, 0.0578],
         [0.2622, 0.3467, 0.4089,  ..., 0.0000, 0.0000, 0.0133]],
        [[0.4533, 0.2444, 0.2000,  ..., 0.4222, 0.5200, 0.6178],
         [0.4756, 0.2667, 0.1911,  ..., 0.6178, 0.6622, 0.6978],
         [0.5067, 0.2978, 0.1956,  ..., 0.6267, 0.6311, 0.6400],
         ...,
         [0.2089, 0.2978, 0.4489,  ..., 0.1956, 0.2311, 0.3156],
         [0.2533, 0.3333, 0.4178,  ..., 0.1822, 0.2089, 0.2622],
         [0.3022, 0.3333, 0.3600,  ..., 0.1689, 0.2000, 0.2311]]]), tensor([[[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0044, 0.0044, 0.0044],
         [0.0000, 0.0178, 0.1244,  ..., 0.1244, 0.1022, 0.0800],
         ...,
         [0.0000, 0.0444, 0.2267,  ..., 0.3022, 0.3022, 0.2933],
         [0.0000, 0.0400, 0.2222,  ..., 0.3067, 0.3111, 0.3022],
         [0.0000, 0.0356, 0.2044,  ..., 0.3156, 0.3200, 0.3067]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0044, 0.0044, 0.0044],
         [0.0000, 0.0178, 0.1200,  ..., 0.1200, 0.1022, 0.0800],
         ...,
         [0.0000, 0.0578, 0.2933,  ..., 0.3778, 0.3778, 0.3644],
         [0.0000, 0.0578, 0.2933,  ..., 0.3822, 0.3867, 0.3644],
         [0.0000, 0.0489, 0.2667,  ..., 0.3867, 0.3911, 0.3689]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0089, 0.0756,  ..., 0.0667, 0.0400, 0.0178],
         ...,
         [0.0000, 0.0089, 0.0489,  ..., 0.0533, 0.0622, 0.0711],
         [0.0000, 0.0044, 0.0356,  ..., 0.0756, 0.0844, 0.0889],
         [0.0000, 0.0000, 0.0089,  ..., 0.0933, 0.1067, 0.1022]]]), tensor([[[0.6178, 0.6311, 0.6578,  ..., 0.5600, 0.6578, 0.6622],
         [0.6133, 0.6044, 0.6133,  ..., 0.5022, 0.6667, 0.6800],
         [0.6578, 0.6578, 0.6311,  ..., 0.4356, 0.6444, 0.6756],
         ...,
         [0.8089, 0.8489, 0.7111,  ..., 0.5467, 0.4400, 0.3244],
         [0.8267, 0.9156, 0.7422,  ..., 0.4578, 0.3556, 0.2800],
         [0.7156, 0.8044, 0.6756,  ..., 0.3644, 0.2711, 0.2400]],
        [[0.5289, 0.5422, 0.5689,  ..., 0.4756, 0.5733, 0.5822],
         [0.5289, 0.5200, 0.5289,  ..., 0.4222, 0.5822, 0.6000],
         [0.5733, 0.5733, 0.5467,  ..., 0.3556, 0.5600, 0.5956],
         ...,
         [0.6978, 0.7378, 0.6000,  ..., 0.5022, 0.3956, 0.2667],
         [0.7156, 0.8044, 0.6311,  ..., 0.4133, 0.3067, 0.2222],
         [0.6133, 0.6933, 0.5644,  ..., 0.2978, 0.2044, 0.1733]],
        [[0.3867, 0.4000, 0.4267,  ..., 0.2444, 0.3378, 0.3156],
         [0.3733, 0.3600, 0.3644,  ..., 0.1689, 0.3289, 0.3244],
         [0.4178, 0.4133, 0.3822,  ..., 0.1067, 0.3067, 0.3200],
         ...,
         [0.5644, 0.6044, 0.4667,  ..., 0.2044, 0.1111, 0.0444],
         [0.5822, 0.6711, 0.4978,  ..., 0.1156, 0.0222, 0.0044],
         [0.4756, 0.5600, 0.4311,  ..., 0.0711, 0.0000, 0.0000]]]), tensor([[[0.0844, 0.0844, 0.0933,  ..., 0.0756, 0.0933, 0.1111],
         [0.0800, 0.0800, 0.0933,  ..., 0.0933, 0.1067, 0.1067],
         [0.0800, 0.0800, 0.0933,  ..., 0.1022, 0.1111, 0.1111],
         ...,
         [0.0222, 0.0267, 0.0311,  ..., 0.0622, 0.0489, 0.0489],
         [0.0400, 0.0489, 0.0489,  ..., 0.0578, 0.0400, 0.0400],
         [0.0400, 0.0533, 0.0489,  ..., 0.0400, 0.0400, 0.0400]],
        [[0.1778, 0.1778, 0.1600,  ..., 0.1200, 0.1378, 0.1600],
         [0.1778, 0.1778, 0.1689,  ..., 0.1378, 0.1511, 0.1556],
         [0.1778, 0.1778, 0.1689,  ..., 0.1422, 0.1511, 0.1511],
         ...,
         [0.1067, 0.0978, 0.1022,  ..., 0.0800, 0.0800, 0.0800],
         [0.1111, 0.1111, 0.1111,  ..., 0.0756, 0.0711, 0.0711],
         [0.1111, 0.1156, 0.1111,  ..., 0.0711, 0.0711, 0.0711]],
        [[0.0356, 0.0356, 0.0889,  ..., 0.0044, 0.0222, 0.0311],
         [0.0622, 0.0622, 0.0622,  ..., 0.0222, 0.0356, 0.0267],
         [0.0622, 0.0622, 0.0622,  ..., 0.0178, 0.0267, 0.0267],
         ...,
         [0.0089, 0.0133, 0.0178,  ..., 0.0044, 0.0000, 0.0000],
         [0.0178, 0.0267, 0.0267,  ..., 0.0000, 0.0000, 0.0000],
         [0.0178, 0.0311, 0.0267,  ..., 0.0000, 0.0000, 0.0000]]]), tensor([[[0.1022, 0.0978, 0.0800,  ..., 0.6089, 0.6667, 0.6756],
         [0.1022, 0.0978, 0.0800,  ..., 0.4800, 0.5733, 0.6578],
         [0.1244, 0.1067, 0.1022,  ..., 0.3911, 0.4800, 0.5556],
         ...,
         [0.3111, 0.3467, 0.5689,  ..., 0.7378, 0.7156, 0.6889],
         [0.3600, 0.3644, 0.5689,  ..., 0.6578, 0.6178, 0.6533],
         [0.4000, 0.4311, 0.6267,  ..., 0.4800, 0.4622, 0.5956]],
        [[0.0800, 0.0800, 0.0800,  ..., 0.4889, 0.5289, 0.5422],
         [0.0800, 0.0800, 0.0800,  ..., 0.3644, 0.4578, 0.5378],
         [0.0800, 0.0800, 0.0800,  ..., 0.2711, 0.3644, 0.4400],
         ...,
         [0.3422, 0.3733, 0.5867,  ..., 0.6756, 0.6533, 0.6356],
         [0.3600, 0.3511, 0.5556,  ..., 0.5956, 0.5556, 0.5956],
         [0.4000, 0.4222, 0.6178,  ..., 0.4000, 0.3778, 0.5111]],
        [[0.0800, 0.0800, 0.0800,  ..., 0.3644, 0.4089, 0.4267],
         [0.0800, 0.0800, 0.0800,  ..., 0.2222, 0.3022, 0.3911],
         [0.0800, 0.0800, 0.0800,  ..., 0.1333, 0.2133, 0.2933],
         ...,
         [0.0800, 0.0800, 0.1733,  ..., 0.0800, 0.0800, 0.0800],
         [0.0800, 0.0800, 0.1733,  ..., 0.0800, 0.0800, 0.0800],
         [0.0800, 0.0800, 0.2356,  ..., 0.0800, 0.0800, 0.0800]]]), tensor([[[0.0267, 0.1289, 0.1822,  ..., 0.1111, 0.0711, 0.0578],
         [0.0533, 0.1333, 0.2844,  ..., 0.1333, 0.0978, 0.1111],
         [0.1156, 0.1289, 0.3333,  ..., 0.2089, 0.0889, 0.1067],
         ...,
         [0.1689, 0.0889, 0.0533,  ..., 0.1689, 0.2622, 0.3111],
         [0.3289, 0.1022, 0.1067,  ..., 0.2756, 0.3467, 0.3333],
         [0.2667, 0.1511, 0.0844,  ..., 0.2000, 0.1733, 0.2356]],
        [[0.0267, 0.1289, 0.1644,  ..., 0.1422, 0.1111, 0.0978],
         [0.0489, 0.1289, 0.2578,  ..., 0.1422, 0.1111, 0.1244],
         [0.1111, 0.1244, 0.3067,  ..., 0.2178, 0.1022, 0.1200],
         ...,
         [0.1822, 0.1022, 0.0622,  ..., 0.2667, 0.3556, 0.4044],
         [0.3422, 0.1156, 0.1156,  ..., 0.3733, 0.4400, 0.4267],
         [0.2889, 0.1733, 0.0978,  ..., 0.3067, 0.2667, 0.3289]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0533,  ..., 0.0178, 0.0222, 0.0356],
         [0.0000, 0.0000, 0.1022,  ..., 0.0933, 0.0133, 0.0311],
         ...,
         [0.0844, 0.0044, 0.0000,  ..., 0.1022, 0.2044, 0.2533],
         [0.2444, 0.0178, 0.0000,  ..., 0.2089, 0.2889, 0.2756],
         [0.2000, 0.0844, 0.0000,  ..., 0.1289, 0.1156, 0.1778]]]), tensor([[[0.0000, 0.0133, 0.0667,  ..., 0.8178, 1.1333, 1.1244],
         [0.0222, 0.0000, 0.0000,  ..., 0.6978, 1.1333, 1.1333],
         [0.1467, 0.0267, 0.0489,  ..., 0.6444, 1.1200, 1.1333],
         ...,
         [0.0267, 0.1200, 0.1867,  ..., 0.5156, 0.5733, 0.6044],
         [0.1333, 0.2178, 0.2133,  ..., 0.5156, 0.5689, 0.6089],
         [0.1867, 0.2667, 0.2178,  ..., 0.4978, 0.5156, 0.5289]],
        [[0.0578, 0.0756, 0.1156,  ..., 0.6267, 1.0356, 1.0978],
         [0.0889, 0.0444, 0.0444,  ..., 0.5111, 1.0267, 1.1333],
         [0.2044, 0.0756, 0.0978,  ..., 0.4667, 1.0222, 1.1289],
         ...,
         [0.0622, 0.1289, 0.1778,  ..., 0.6978, 0.7333, 0.7378],
         [0.1867, 0.2444, 0.2178,  ..., 0.7200, 0.7511, 0.7600],
         [0.2711, 0.3289, 0.2622,  ..., 0.7244, 0.7111, 0.6933]],
        [[0.0000, 0.0000, 0.0000,  ..., 0.6667, 1.0044, 1.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.5733, 1.0044, 1.0356],
         [0.0133, 0.0000, 0.0000,  ..., 0.5022, 0.9733, 1.0044],
         ...,
         [0.0133, 0.1156, 0.2000,  ..., 0.4044, 0.4578, 0.4978],
         [0.1422, 0.2267, 0.2267,  ..., 0.3956, 0.4489, 0.4889],
         [0.1867, 0.2533, 0.2133,  ..., 0.3733, 0.3778, 0.3867]]]), tensor([[[0.4578, 0.3867, 0.3556,  ..., 0.6044, 0.6089, 0.6622],
         [0.5822, 0.4844, 0.4711,  ..., 0.5778, 0.5956, 0.6133],
         [0.3911, 0.4089, 0.4444,  ..., 0.5689, 0.5867, 0.5422],
         ...,
         [0.3156, 0.1778, 0.2178,  ..., 0.1200, 0.2000, 0.2578],
         [0.2711, 0.2222, 0.2267,  ..., 0.1244, 0.2000, 0.2578],
         [0.2267, 0.2267, 0.2400,  ..., 0.2222, 0.2400, 0.2578]],
        [[0.4089, 0.3422, 0.3156,  ..., 0.6178, 0.6178, 0.6533],
         [0.5333, 0.4400, 0.4311,  ..., 0.5911, 0.6089, 0.6044],
         [0.3644, 0.3822, 0.4178,  ..., 0.5556, 0.5733, 0.5333],
         ...,
         [0.2311, 0.1022, 0.1467,  ..., 0.2222, 0.3022, 0.3600],
         [0.2000, 0.1556, 0.1600,  ..., 0.2178, 0.2933, 0.3556],
         [0.1556, 0.1600, 0.1733,  ..., 0.3156, 0.3333, 0.3556]],
        [[0.1867, 0.0978, 0.0622,  ..., 0.0889, 0.0978, 0.1778],
         [0.3067, 0.1956, 0.1778,  ..., 0.0667, 0.0889, 0.1289],
         [0.1333, 0.1422, 0.1644,  ..., 0.0667, 0.0933, 0.0667],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]]]), tensor([[[0.1422, 0.1333, 0.1333,  ..., 0.0756, 0.0756, 0.0800],
         [0.1333, 0.1244, 0.1467,  ..., 0.0800, 0.0844, 0.0844],
         [0.1644, 0.1600, 0.2044,  ..., 0.0933, 0.0933, 0.0933],
         ...,
         [0.1689, 0.3111, 0.4800,  ..., 1.0000, 0.9733, 0.8667],
         [0.1111, 0.2000, 0.3689,  ..., 0.9022, 0.9111, 0.8622],
         [0.1244, 0.1422, 0.2533,  ..., 0.8133, 0.8400, 0.8444]],
        [[0.1556, 0.1289, 0.1156,  ..., 0.1022, 0.1022, 0.1022],
         [0.1378, 0.1156, 0.1200,  ..., 0.1022, 0.1022, 0.1022],
         [0.1556, 0.1244, 0.1467,  ..., 0.1022, 0.0978, 0.0978],
         ...,
         [0.2133, 0.3600, 0.5333,  ..., 0.8711, 0.8578, 0.7689],
         [0.1511, 0.2489, 0.4222,  ..., 0.7867, 0.8089, 0.7689],
         [0.1689, 0.1911, 0.3067,  ..., 0.6978, 0.7378, 0.7556]],
        [[0.0178, 0.0044, 0.0000,  ..., 0.0356, 0.0356, 0.0311],
         [0.0267, 0.0044, 0.0089,  ..., 0.0356, 0.0356, 0.0311],
         [0.0400, 0.0178, 0.0311,  ..., 0.0356, 0.0356, 0.0311],
         ...,
         [0.0667, 0.1867, 0.3333,  ..., 0.6044, 0.5956, 0.5111],
         [0.0267, 0.0933, 0.2356,  ..., 0.5200, 0.5511, 0.5111],
         [0.0356, 0.0444, 0.1333,  ..., 0.4356, 0.4756, 0.5022]]]), tensor([[[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]],
        [[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]],
        [[0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         ...,
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.],
         [0., 0., 0.,  ..., 0., 0., 0.]]]), tensor([[[0.7200, 0.2622, 0.2711,  ..., 0.5867, 0.5822, 0.5644],
         [0.7200, 0.2622, 0.2444,  ..., 0.5911, 0.5778, 0.5644],
         [0.7200, 0.2622, 0.2933,  ..., 0.5956, 0.5689, 0.5556],
         ...,
         [0.2800, 0.1733, 0.1067,  ..., 0.4533, 0.6089, 0.8533],
         [0.4133, 0.3511, 0.1689,  ..., 0.5600, 0.6844, 0.8844],
         [0.3778, 0.3378, 0.1956,  ..., 0.4889, 0.6000, 0.7333]],
        [[0.7244, 0.2667, 0.2756,  ..., 0.6711, 0.6711, 0.6533],
         [0.7244, 0.2622, 0.2356,  ..., 0.6711, 0.6622, 0.6489],
         [0.7244, 0.2622, 0.2889,  ..., 0.6756, 0.6578, 0.6400],
         ...,
         [0.2889, 0.1822, 0.1067,  ..., 0.5556, 0.6844, 0.9289],
         [0.4178, 0.3556, 0.1689,  ..., 0.6622, 0.7600, 0.9600],
         [0.4178, 0.3778, 0.2311,  ..., 0.5956, 0.6933, 0.8267]],
        [[0.4533, 0.0000, 0.0000,  ..., 0.0933, 0.0622, 0.0489],
         [0.4622, 0.0000, 0.0000,  ..., 0.1200, 0.0756, 0.0667],
         [0.4622, 0.0000, 0.0178,  ..., 0.1244, 0.0711, 0.0533],
         ...,
         [0.0000, 0.0000, 0.0000,  ..., 0.1778, 0.4089, 0.6489],
         [0.1244, 0.0622, 0.0000,  ..., 0.2844, 0.4800, 0.6800],
         [0.1111, 0.0711, 0.0000,  ..., 0.2444, 0.4400, 0.5733]]]), tensor([[[0.1111, 0.1022, 0.0933,  ..., 0.7244, 0.7422, 0.7289],
         [0.1200, 0.1111, 0.1067,  ..., 0.8311, 0.8578, 0.8311],
         [0.1289, 0.1200, 0.1156,  ..., 0.5911, 0.7156, 0.8000],
         ...,
         [0.8000, 0.5200, 0.2889,  ..., 0.1067, 0.1111, 0.1111],
         [1.0978, 0.8400, 0.4267,  ..., 0.1067, 0.1111, 0.1111],
         [1.0578, 0.8311, 0.4311,  ..., 0.1111, 0.1111, 0.1111]],
        [[0.1556, 0.1467, 0.1378,  ..., 0.7600, 0.7822, 0.8222],
         [0.1644, 0.1556, 0.1511,  ..., 0.8667, 0.8978, 0.9244],
         [0.1733, 0.1644, 0.1556,  ..., 0.7244, 0.8533, 0.8933],
         ...,
         [0.7778, 0.5022, 0.2889,  ..., 0.1111, 0.1156, 0.1156],
         [1.0667, 0.8178, 0.4267,  ..., 0.1111, 0.1156, 0.1156],
         [1.0267, 0.8089, 0.4311,  ..., 0.1156, 0.1156, 0.1156]],
        [[0.0578, 0.0444, 0.0311,  ..., 0.4444, 0.4667, 0.4889],
         [0.0667, 0.0533, 0.0444,  ..., 0.5511, 0.5822, 0.5911],
         [0.0756, 0.0711, 0.0711,  ..., 0.4267, 0.5556, 0.6089],
         ...,
         [0.6356, 0.3600, 0.1467,  ..., 0.0311, 0.0311, 0.0311],
         [0.9378, 0.6844, 0.2844,  ..., 0.0311, 0.0311, 0.0222],
         [0.8978, 0.6756, 0.2889,  ..., 0.0311, 0.0311, 0.0222]]]), tensor([[[0.8222, 0.7511, 0.5956,  ..., 0.0889, 0.1422, 0.2978],
         [0.8089, 0.7600, 0.6356,  ..., 0.0889, 0.1911, 0.4000],
         [0.7911, 0.7644, 0.6756,  ..., 0.0889, 0.2267, 0.4400],
         ...,
         [0.1822, 0.2133, 0.2178,  ..., 0.2933, 0.2489, 0.2044],
         [0.1911, 0.2044, 0.2222,  ..., 0.4178, 0.3600, 0.3156],
         [0.1733, 0.1689, 0.1867,  ..., 0.4578, 0.4311, 0.4044]],
        [[0.8000, 0.7289, 0.5644,  ..., 0.1378, 0.1956, 0.3511],
         [0.7867, 0.7333, 0.6000,  ..., 0.1422, 0.2489, 0.4578],
         [0.7556, 0.7289, 0.6311,  ..., 0.1422, 0.2800, 0.4933],
         ...,
         [0.2044, 0.2356, 0.2444,  ..., 0.3200, 0.2533, 0.2000],
         [0.2178, 0.2311, 0.2444,  ..., 0.4578, 0.3822, 0.3200],
         [0.2000, 0.1911, 0.2089,  ..., 0.5067, 0.4533, 0.4178]],
        [[0.7200, 0.6489, 0.4844,  ..., 0.0133, 0.0622, 0.1911],
         [0.7022, 0.6533, 0.5200,  ..., 0.0222, 0.1111, 0.2933],
         [0.6756, 0.6489, 0.5467,  ..., 0.0311, 0.1422, 0.3289],
         ...,
         [0.0267, 0.0489, 0.0578,  ..., 0.1956, 0.1422, 0.0978],
         [0.0356, 0.0489, 0.0711,  ..., 0.3111, 0.2533, 0.2089],
         [0.0267, 0.0267, 0.0489,  ..., 0.3511, 0.3244, 0.2978]]]))
*** AttributeError: 'tuple' object has no attribute 'shape'
*** NameError: name 'images' is not defined
32
torch.Size([3, 53, 95])
torch.Size([3, 41, 38])
*** TypeError: conv2d() received an invalid combination of arguments - got (tuple, Parameter, NoneType, tuple, tuple, tuple, int), but expected one of:
 * (Tensor input, Tensor weight, Tensor bias, tuple of ints stride, tuple of ints padding, tuple of ints dilation, int groups)
      didn't match because some of the arguments have invalid types: ([31mtuple[39m, [31mParameter[39m, [31mNoneType[39m, [31mtuple[39m, [31mtuple[39m, [31mtuple[39m, [32mint[39m)
 * (Tensor input, Tensor weight, Tensor bias, tuple of ints stride, str padding, tuple of ints dilation, int groups)
      didn't match because some of the arguments have invalid types: ([31mtuple[39m, [31mParameter[39m, [31mNoneType[39m, [31mtuple[39m, [31mtuple[39m, [31mtuple[39m, [32mint[39m)
Exception ignored in: <function _MultiProcessingDataLoaderIter.__del__ at 0x127663af0>
Traceback (most recent call last):
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1510, in __del__
    self._shutdown_workers()
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1474, in _shutdown_workers
    w.join(timeout=_utils.MP_STATUS_CHECK_INTERVAL)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/multiprocessing/popen_fork.py", line 40, in wait
    if not wait([self.sentinel], timeout):
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/multiprocessing/connection.py", line 936, in wait
    ready = selector.select(timeout)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/selectors.py", line 416, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt:
Traceback (most recent call last):
  File "/Users/sagar/Desktop/Ace/Brovo5/playground.py", line 43, in <module>
    main()
  File "/Users/sagar/Desktop/Ace/Brovo5/playground.py", line 39, in main
    Trainer.fit(Classifier)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 696, in fit
    self._call_and_handle_interrupt(
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 735, in _fit_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1166, in _run
    results = self._run_stage()
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1252, in _run_stage
    return self._run_train()
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1274, in _run_train
    self._run_sanity_check()
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1343, in _run_sanity_check
    val_loop.run()
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/loops/loop.py", line 200, in run
    self.advance(*args, **kwargs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 155, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/loops/loop.py", line 200, in run
    self.advance(*args, **kwargs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 143, in advance
    output = self._evaluation_step(**kwargs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 240, in _evaluation_step
    output = self.trainer._call_strategy_hook(hook_name, *kwargs.values())
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1704, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 370, in validation_step
    return self.model.validation_step(*args, **kwargs)
  File "/Users/sagar/Desktop/Ace/Brovo5/logic.py", line 69, in validation_step
    outputs = self.model(imgs)
  File "/Users/sagar/Desktop/Ace/Brovo5/logic.py", line 69, in validation_step
    outputs = self.model(imgs)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/Users/sagar/opt/miniconda3/envs/Bravo13/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit